!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ConfigFileReader	ConfigFileReader.java	/^    public ConfigFileReader(Scanner in) {$/;"	m	class:ConfigFileReader
ConfigFileReader	ConfigFileReader.java	/^public class ConfigFileReader {$/;"	c
FogIPAddress	ConfigFileReader.java	/^    protected InetAddress[] FogIPAddress; \/\/ an array containing the IP addresses (or hostnames) of all the fog nodes $/;"	f	class:ConfigFileReader
FogIPAddress	RequestSender.java	/^    private InetAddress[] FogIPAddress;  \/\/ local version of FogIPAddress[] in ConfigFileReader$/;"	f	class:RequestSender	file:
FogPortNumber	ConfigFileReader.java	/^    protected int[] FogPortNumber; \/\/ an array containing port number of all the fog nodes $/;"	f	class:ConfigFileReader
FogPortNumber	RequestSender.java	/^    private int[] FogPortNumber; \/\/ local version of FogPortNumber[] in ConfigFileReader$/;"	f	class:RequestSender	file:
Listener	Listener.java	/^public class Listener {$/;"	c
Main	Main.java	/^public class Main {$/;"	c
RequestSender	RequestSender.java	/^    public RequestSender(long interval, int forwardLimit, String ownHostName, int listenerPortNumber, InetAddress[] FogIPAddress, int[] FogPortNumber) {$/;"	m	class:RequestSender
RequestSender	RequestSender.java	/^public class RequestSender implements Runnable {$/;"	c
constructMessage	RequestSender.java	/^    private String constructMessage() {$/;"	m	class:RequestSender	file:
currentFogNodeIndex	RequestSender.java	/^    private int currentFogNodeIndex = 0; \/\/ an index of the current fog node that the request must be sent to$/;"	f	class:RequestSender	file:
forwardLimit	ConfigFileReader.java	/^    protected int forwardLimit; \/\/ the forward limit of fog nodes$/;"	f	class:ConfigFileReader
forwardLimit	RequestSender.java	/^    private int forwardLimit; \/\/ local version of forward limit in ConfigFileReader$/;"	f	class:RequestSender	file:
interval	ConfigFileReader.java	/^    protected long interval; \/\/ interval between sending packets to destinations (in ms)$/;"	f	class:ConfigFileReader
interval	RequestSender.java	/^    private long interval; \/\/ local version of the interval (in ms) in ConfigFileReader$/;"	f	class:RequestSender	file:
iotnodereqgen	ConfigFileReader.java	/^package iotnodereqgen;$/;"	p
iotnodereqgen	Listener.java	/^package iotnodereqgen;$/;"	p
iotnodereqgen	Main.java	/^package iotnodereqgen;$/;"	p
iotnodereqgen	RequestSender.java	/^package iotnodereqgen;$/;"	p
listen	Listener.java	/^    public static void listen(int portNumber) {$/;"	m	class:Listener
listenerPortNumber	ConfigFileReader.java	/^    protected int listenerPortNumber; \/\/ the port number of the machine where this program runs$/;"	f	class:ConfigFileReader
listenerPortNumber	RequestSender.java	/^    private int listenerPortNumber; \/\/ local version of listenerPortNumber in ConfigFileReader$/;"	f	class:RequestSender	file:
main	Main.java	/^    public static void main(String[] args) throws FileNotFoundException {$/;"	m	class:Main
next	RequestSender.java	/^    private int next(int numberOfNodes) {$/;"	m	class:RequestSender	file:
ownHostName	ConfigFileReader.java	/^    protected String ownHostName; \/\/ the IP address (or hostname) of the machine where this program runs$/;"	f	class:ConfigFileReader
ownHostName	RequestSender.java	/^    private String ownHostName; \/\/ local version of ownHostName in ConfigFileReader$/;"	f	class:RequestSender	file:
run	RequestSender.java	/^    public void run() {$/;"	m	class:RequestSender
send	RequestSender.java	/^    private void send(InetAddress IPAddress, int port, String data) {$/;"	m	class:RequestSender	file:
seqNumber	RequestSender.java	/^    private long seqNumber = 0; \/\/ squence number of the request to be sent$/;"	f	class:RequestSender	file:
